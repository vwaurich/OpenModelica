defaultMakefileTarget = Makefile.omdev.mingw
REALPATH = $(realpath .)
OMBUILDDIR=$(REALPATH)/build

OMDEVMSYS=$(shell cygpath $$OMDEV)

CMAKE = $(OMDEVMSYS)/bin/cmake/bin/cmake
CMAKE_TARGET = "MSYS Makefiles"

builddir_bin = $(OMBUILDDIR)/bin

PKG_CONFIG_BIN = $(OMDEVMSYS)/lib/gtk+-2.24.10/bin
ifeq (MINGW32,$(findstring MINGW32,$(shell uname)))
DBUS_INCLUDE_DIR = $(OMDEVMSYS)/tools/msys/mingw32/include/dbus-1.0/
DBUS_INCLUDE_LIB_DIR = $(OMDEVMSYS)/tools/msys/mingw32/lib/dbus-1.0/include/
DBUS_PATH = $(OMDEVMSYS)/tools/msys/mingw32/bin/
BOOST_PATH_MSVC = $(OMDEVMSYS)/lib/3rdParty/boost-1_55/
OSG_PATH = $(OMDEVMSYS)/tools/msys/mingw32/
PKG_CONFIG_PATH=$(OMDEVMSYS)/tools/msys/mingw32/lib/pkgconfig
else # mingw64
DBUS_INCLUDE_DIR = $(OMDEVMSYS)/tools/msys/mingw64/include/dbus-1.0/
DBUS_INCLUDE_LIB_DIR = $(OMDEVMSYS)/tools/msys/mingw64/lib/dbus-1.0/include/
DBUS_PATH = $(OMDEVMSYS)/tools/msys/mingw64/bin/
BOOST_PATH = $(OMDEVMSYS)/tools/msys/mingw64/include
OSG_PATH = $(OMDEVMSYS)/tools/msys/mingw64/
PKG_CONFIG_PATH=$(OMDEVMSYS)/tools/msys/mingw64/lib/pkgconfig
endif
ifeq ($(BUILDTYPE),)
BUILDTYPE=Debug
endif

.PHONY: omc omc-diff omlibrary-core omplot omedit omnotebook omshell omoptim modelica3d

all: omc omc-diff omlibrary-core

omc:
	$(MAKE) -f $(defaultMakefileTarget) -C OMCompiler OMBUILDDIR=$(OMBUILDDIR)

omc-diff: omc
	$(MAKE) -C testsuite/ -f Makefile omc-diff OMBUILDDIR=$(OMBUILDDIR)

omlibrary-core:
	$(MAKE) -C libraries BUILD_DIR=$(OMBUILDDIR)/lib/omlibrary core
	$(MAKE) -f $(defaultMakefileTarget) modelica3d

omlibrary-all:
	$(MAKE) -C libraries BUILD_DIR=$(OMBUILDDIR)/lib/omlibrary all
	$(MAKE) -f $(defaultMakefileTarget) modelica3d

omplot: omc qtclientsDLLs
	$(MAKE) -C OMPlot -f $(defaultMakefileTarget) OMBUILDDIR=$(OMBUILDDIR)

omedit: omplot qtclientsDLLs
	$(MAKE) -f $(defaultMakefileTarget) -C OMEdit OMBUILDDIR=$(OMBUILDDIR)

omnotebook: omc omplot qtclientsDLLs
	$(MAKE) -f $(defaultMakefileTarget) -C OMNotebook/OMNotebook/OMNotebookGUI OMBUILDDIR=$(OMBUILDDIR)

omshell: omc qtclientsDLLs
	$(MAKE) -f $(defaultMakefileTarget) -C OMShell/OMShell/OMShellGUI OMBUILDDIR=$(OMBUILDDIR)

omoptim: omc omplot qtclientsDLLs
	$(MAKE) -f $(defaultMakefileTarget) -C OMOptim OMBUILDDIR=$(OMBUILDDIR)

qtclients: omplot omedit omnotebook omshell omoptim

qtclientsDLLs:
	echo Copying needed .dlls
	mkdir -p $(builddir_bin)/
ifeq (MINGW32,$(findstring MINGW32,$(shell uname)))
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/libgcc_s*.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/libintl-8.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/libiconv-2.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/Qt5Core.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/Qt5Gui.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/Qt5Network.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/Qt5Svg.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/Qt5WebKit.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/Qt5WebKitWidgets.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/Qt5Xml.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/Qt5XmlPatterns.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/Qt5Widgets.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/Qt5PrintSupport.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/Qt5Multimedia.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/Qt5MultimediaWidgets.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/Qt5Positioning.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/Qt5Qml.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/Qt5Quick.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/Qt5Sensors.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/Qt5WebChannel.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/Qt5Sql.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/Qt5OpenGL.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/libxslt-1.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/libpcre-1.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/liblzma-5.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/libxml2-2.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/libwebp-6.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/libsqlite3-0.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/zlib1.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/libszip-0.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/libhdf5-0.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/libpng16-16.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/libjpeg-8.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/libfreetype-6.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/libglib-2.0-0.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/libbz2-1.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/libicuin56.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/libicuuc56.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/libicudt56.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/libpcre16-0.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw32/bin/libharfbuzz-0.dll $(builddir_bin)/
	cp -pufr $(OMDEVMSYS)/tools/msys/mingw32/share/qt5/plugins/* $(builddir_bin)/
	cp -pufr $(OMDEVMSYS)/tools/msys/mingw32/bin/libOpenThreads.dll $(builddir_bin)/
	cp -pufr $(OMDEVMSYS)/tools/msys/mingw32/bin/libosg.dll $(builddir_bin)/
	cp -pufr $(OMDEVMSYS)/tools/msys/mingw32/bin/libosgViewer.dll $(builddir_bin)/
	cp -pufr $(OMDEVMSYS)/tools/msys/mingw32/bin/libosgDB.dll $(builddir_bin)/
	cp -pufr $(OMDEVMSYS)/tools/msys/mingw32/bin/libosgUtil.dll $(builddir_bin)/
	cp -pufr $(OMDEVMSYS)/tools/msys/mingw32/bin/libosgGA.dll $(builddir_bin)/
	cp -pufr $(OMDEVMSYS)/tools/msys/mingw32/bin/libosgText.dll $(builddir_bin)/
	cp -pufr $(OMDEVMSYS)/tools/msys/mingw32/bin/libosgQt.dll $(builddir_bin)/

else # mingw64
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/libgcc_s*.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/libintl-8.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/libiconv-2.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/Qt5Core.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/Qt5Gui.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/Qt5Network.dll $(builddir_bin)
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/Qt5Svg.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/Qt5WebKit.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/Qt5WebKitWidgets.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/Qt5Xml.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/Qt5XmlPatterns.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/Qt5Widgets.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/Qt5PrintSupport.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/Qt5Multimedia.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/Qt5MultimediaWidgets.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/Qt5Positioning.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/Qt5Qml.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/Qt5Quick.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/Qt5Sensors.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/Qt5WebChannel.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/Qt5Sql.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/Qt5OpenGL.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/libpcre-1.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/libxslt-1.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/liblzma-5.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/libxml2-2.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/libwebp-6.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/libsqlite3-0.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/zlib1.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/libszip-0.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/libhdf5-0.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/libpng16-16.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/libjpeg-8.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/libfreetype-6.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/libglib-2.0-0.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/libbz2-1.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/libicuin56.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/libicuuc56.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/libicudt56.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/libpcre16-0.dll $(builddir_bin)/
	cp -puf $(OMDEVMSYS)/tools/msys/mingw64/bin/libharfbuzz-0.dll $(builddir_bin)/
	cp -pufr $(OMDEVMSYS)/tools/msys/mingw64/share/qt5/plugins/* $(builddir_bin)/
	cp -pufr $(OMDEVMSYS)/tools/msys/mingw64/bin/libOpenThreads.dll $(builddir_bin)/
	cp -pufr $(OMDEVMSYS)/tools/msys/mingw64/bin/libosg.dll $(builddir_bin)/
	cp -pufr $(OMDEVMSYS)/tools/msys/mingw64/bin/libosgViewer.dll $(builddir_bin)/
	cp -pufr $(OMDEVMSYS)/tools/msys/mingw64/bin/libosgDB.dll $(builddir_bin)/
	cp -pufr $(OMDEVMSYS)/tools/msys/mingw64/bin/libosgUtil.dll $(builddir_bin)/
	cp -pufr $(OMDEVMSYS)/tools/msys/mingw64/bin/libosgGA.dll $(builddir_bin)/
	cp -pufr $(OMDEVMSYS)/tools/msys/mingw64/bin/libosgText.dll $(builddir_bin)/
	cp -pufr $(OMDEVMSYS)/tools/msys/mingw64/bin/libosgQt.dll $(builddir_bin)/
endif

clean-qtclients:
	rm -f $(OMBUILDDIR)/bin/OMPlot.exe $(OMBUILDDIR)/bin/OMEdit.exe $(OMBUILDDIR)/bin/OMNotebook.exe $(OMBUILDDIR)/bin/OMShell.exe $(OMBUILDDIR)/bin/OMOptim.exe
	rm -f $(OMBUILDDIR)/lib/libOMPlot.a $(OMBUILDDIR)/lib/libOMOptimBasis.a $(OMBUILDDIR)/lib/libOMOptim.a
	rm -rf $(OMBUILDDIR)/share/omedit* $(OMBUILDDIR)/share/omnotebook* $(OMBUILDDIR)/share/omshell*
	$(MAKE) -C OMPlot -f Makefile.omdev.mingw OMBUILDDIR=$(OMBUILDDIR) clean
	$(MAKE) -C OMEdit -f Makefile.omdev.mingw OMBUILDDIR=$(OMBUILDDIR) clean
	$(MAKE) -C OMNotebook/OMNotebook/OMNotebookGUI -f Makefile.omdev.mingw OMBUILDDIR=$(OMBUILDDIR) clean
	$(MAKE) -C OMShell/OMShell/OMShellGUI -f Makefile.omdev.mingw OMBUILDDIR=$(OMBUILDDIR) clean
	$(MAKE) -C OMOptim -f Makefile.omdev.mingw OMBUILDDIR=$(OMBUILDDIR) clean

simulationruntimecmsvc:
	$(MAKE) -C OMCompiler -f $(defaultMakefileTarget) OMBUILDDIR=$(OMBUILDDIR) simulationruntimecmsvc

runtimeCPPmsvcinstall:
	$(MAKE) -C OMCompiler -f $(defaultMakefileTarget) OMBUILDDIR=$(OMBUILDDIR) BUILDTYPE=$(BUILDTYPE) runtimeCPPmsvcinstall

runtimeCPPinstall:
	$(MAKE) -C OMCompiler -f $(defaultMakefileTarget) OMBUILDDIR=$(OMBUILDDIR) BUILDTYPE=$(BUILDTYPE) runtimeCPPinstall

testlogwindows:
	$(MAKE) -C testsuite -f Makefile ReferenceFiles > testsuite/testsuite-trace.txt
	(time $(MAKE) -C testsuite -f Makefile 2>&1 | tee testsuite/testsuite-trace.txt) || true
	(time $(MAKE) -C testsuite/openmodelica/cruntime/msvc/ -f Makefile >> testsuite/testsuite-trace.txt 2>&1) || true
	(export RTEST_OMCFLAGS=+target=msvc ; time $(MAKE) -C testsuite/openmodelica/cppruntime/ -f Makefile >> testsuite/testsuite-trace.txt 2>&1) || true
	echo "log is in testsuite/testsuite-trace.txt"
	fgrep -v "... ok" testsuite/testsuite-trace.txt
	echo "Successful tests: "
	cat testsuite/testsuite-trace.txt | grep "... ok" | wc -l
	echo "Failed models: "
	cat testsuite/testsuite-trace.txt | grep "==== Log" | wc -l
	cat testsuite/testsuite-trace.txt | grep "==== Log" ; echo DONE!

builddir_lib=$(OMBUILDDIR)/lib
builddir_share=$(OMBUILDDIR)/share
ifeq (MINGW32,$(findstring MINGW32,$(shell uname)))
IDLPYTHON = $(OMDEVMSYS)/lib/omniORBpy-4.2.0-win32/bin/x86_win32/omniidl -bpython -Wbglobal=_OMCIDL -Wbpackage=OMPythonIDL
else # mingw64
IDLPYTHON = $(OMDEVMSYS)/lib/omniORBpy-4.2.0-win64/bin/x86_win32/omniidl -bpython -Wbglobal=_OMCIDL -Wbpackage=OMPythonIDL
endif
IDLPYTHONTARGET = $(builddir_share)/omc/scripts/PythonInterface/OMPythonIDL/omc_communication_idl.py
IDLFILE=OMCompiler/Compiler/runtime/omc_communication.idl

install-python: $(IDLPYTHONTARGET)

.PHONY: script-files-python

script-files-python: mkbuilddirs-python
	# copy library files neeeded by OMPython
ifeq (MINGW32,$(findstring MINGW32,$(shell uname)))
	(cp -puf $(OMDEVMSYS)/lib/omniORBpy-4.2.0-win32/lib/x86_win32/_omnipy.pyd $(builddir_lib)/python)
	(cp -puf $(OMDEVMSYS)/lib/omniORBpy-4.2.0-win32/lib/python/omniORB/__init__.py $(builddir_lib)/python/omniORB/)
	(cp -puf $(OMDEVMSYS)/lib/omniORBpy-4.2.0-win32/lib/python/omniORB/boxes_idl.py $(builddir_lib)/python/omniORB/)
	(cp -puf $(OMDEVMSYS)/lib/omniORBpy-4.2.0-win32/lib/python/omniORB/CORBA.py $(builddir_lib)/python/omniORB/)
	(cp -puf $(OMDEVMSYS)/lib/omniORBpy-4.2.0-win32/lib/python/omniORB/corbaidl_idl.py $(builddir_lib)/python/omniORB/)
	(cp -puf $(OMDEVMSYS)/lib/omniORBpy-4.2.0-win32/lib/python/omniORB/minorCodes.py $(builddir_lib)/python/omniORB/)
	(cp -puf $(OMDEVMSYS)/lib/omniORBpy-4.2.0-win32/lib/python/omniORB/PortableServer.py $(builddir_lib)/python/omniORB/)
	(cp -puf $(OMDEVMSYS)/lib/omniORBpy-4.2.0-win32/lib/python/omniORB/tcInternal.py $(builddir_lib)/python/omniORB/)
	(cp -puf $(OMDEVMSYS)/lib/omniORBpy-4.2.0-win32/lib/python/omniORB/omniPolicy.py $(builddir_lib)/python/omniORB/)
	(cp -puf $(OMDEVMSYS)/lib/omniORBpy-4.2.0-win32/lib/python/omniORB/pollable_idl.py $(builddir_lib)/python/omniORB/)
	(cp -puf $(OMDEVMSYS)/lib/omniORBpy-4.2.0-win32/lib/python/omniORB/messaging_idl.py $(builddir_lib)/python/omniORB/)
else # mingw64
	(cp -puf $(OMDEVMSYS)/lib/omniORBpy-4.2.0-win64/lib/x86_win32/_omnipy.pyd $(builddir_lib)/python)
	(cp -puf $(OMDEVMSYS)/lib/omniORBpy-4.2.0-win64/lib/python/omniORB/__init__.py $(builddir_lib)/python/omniORB/)
	(cp -puf $(OMDEVMSYS)/lib/omniORBpy-4.2.0-win64/lib/python/omniORB/boxes_idl.py $(builddir_lib)/python/omniORB/)
	(cp -puf $(OMDEVMSYS)/lib/omniORBpy-4.2.0-win64/lib/python/omniORB/CORBA.py $(builddir_lib)/python/omniORB/)
	(cp -puf $(OMDEVMSYS)/lib/omniORBpy-4.2.0-win64/lib/python/omniORB/corbaidl_idl.py $(builddir_lib)/python/omniORB/)
	(cp -puf $(OMDEVMSYS)/lib/omniORBpy-4.2.0-win64/lib/python/omniORB/minorCodes.py $(builddir_lib)/python/omniORB/)
	(cp -puf $(OMDEVMSYS)/lib/omniORBpy-4.2.0-win64/lib/python/omniORB/PortableServer.py $(builddir_lib)/python/omniORB/)
	(cp -puf $(OMDEVMSYS)/lib/omniORBpy-4.2.0-win64/lib/python/omniORB/tcInternal.py $(builddir_lib)/python/omniORB/)
	(cp -puf $(OMDEVMSYS)/lib/omniORBpy-4.2.0-win64/lib/python/omniORB/omniPolicy.py $(builddir_lib)/python/omniORB/)
	(cp -puf $(OMDEVMSYS)/lib/omniORBpy-4.2.0-win64/lib/python/omniORB/pollable_idl.py $(builddir_lib)/python/omniORB/)
	(cp -puf $(OMDEVMSYS)/lib/omniORBpy-4.2.0-win64/lib/python/omniORB/messaging_idl.py $(builddir_lib)/python/omniORB/)
endif
	# copy OMPython files
	cp -rfp OMPython/setup.py $(builddir_share)/omc/scripts/PythonInterface
	cp -rfp OMPython/OMPython/* $(builddir_share)/omc/scripts/PythonInterface/OMPython

$(IDLPYTHONTARGET) : $(IDLFILE) script-files-python
	$(IDLPYTHON) -C$(builddir_share)/omc/scripts/PythonInterface $(IDLFILE)

mkbuilddirs-python:
	# create directories
	mkdir -p $(builddir_lib)/python/omniORB
	mkdir -p $(builddir_share)/omc/scripts/PythonInterface/OMPython/OMParser

modelica3d:
	cd libraries/git/Modelica3D && mkdir -p build
	cd libraries/git/Modelica3D/build && $(CMAKE) -DCMAKE_VERBOSE_MAKEFILE:Bool=ON -DCMAKE_COLOR_MAKEFILE:Bool=OFF -DOSG_BACKEND=1 -DDBUS_INCLUDE_DIR=$(DBUS_INCLUDE_DIR) -DDBUS_INCLUDE_LIB_DIR=$(DBUS_INCLUDE_LIB_DIR) -DDBUS_LIBRARY=$(DBUS_PATH) -DBOOST_ROOT=$(BOOST_PATH) -DCMAKE_PREFIX_PATH=$(OSG_PATH) -DCMAKE_PROGRAM_PATH=$(PKG_CONFIG_BIN) -DPKG_CONFIG_PATH=$(PKG_CONFIG_PATH) -DUSE_OMC=0 .. -G $(CMAKE_TARGET)
	$(MAKE) -C libraries/git/Modelica3D/build
	mkdir -p $(OMBUILDDIR)/lib/omlibrary-modelica3d/blender2.59 $(OMBUILDDIR)/lib/omlibrary-modelica3d/osg-gtk/dbus-python/etc
	cp -p libraries/git/Modelica3D/build/lib/modcount/libmodcount.a libraries/git/Modelica3D/build/lib/modbus/libmodbus.a $(OMBUILDDIR)/lib/omc/
	cp -p libraries/git/Modelica3D/examples/multibody/src/modelica/*.mo $(OMBUILDDIR)/lib/omlibrary-modelica3d/
	cp -p libraries/git/Modelica3D/backends/blender2.59/dbus-server.py $(OMBUILDDIR)/lib/omlibrary-modelica3d/blender2.59/
	cp -p libraries/git/Modelica3D/backends/osg-gtk/python/dbus-server.py $(OMBUILDDIR)/lib/omlibrary-modelica3d/osg-gtk/
	# copy the dbus-python bindings binaries required by osg-gtk python script
	cp -rp $(OMDEVMSYS)/lib/dbus-python-1.1.1/lib/site-packages/* $(OMBUILDDIR)/lib/omlibrary-modelica3d/osg-gtk/dbus-python/
	cp -rp $(OMDEVMSYS)/lib/dbus-python-1.1.1/bin/* $(OMBUILDDIR)/lib/omlibrary-modelica3d/osg-gtk/dbus-python/
	cp -rp $(OMDEVMSYS)/lib/dbus-python-1.1.1/etc/* $(OMBUILDDIR)/lib/omlibrary-modelica3d/osg-gtk/dbus-python/etc
	# copy the required gtk binaries
	cp -p -u $(OMDEVMSYS)/lib/gtk+-2.24.10/bin/*.dll $(OMBUILDDIR)/lib/omlibrary-modelica3d/osg-gtk/
	# copy the required modelica3D binaries
	cp -p libraries/git/Modelica3D/build/backends/osg-gtk/libm3d-osg-gtk.* libraries/git/Modelica3D/build/lib/proc3d/libproc3d.* $(OMBUILDDIR)/lib/omlibrary-modelica3d/osg-gtk/
	# copy the required osg binaries
	mkdir -p  $(OMBUILDDIR)/lib/omlibrary-modelica3d/osg-gtk/osgPlugins-3.5.1
ifeq (MINGW32,$(findstring MINGW32,$(shell uname)))
	# copy the dbus static lib required during the simulation
	cp -rp $(OMDEVMSYS)/tools/msys/mingw32/lib/libdbus-1.a $(OMBUILDDIR)/lib/omc/
	cp -p -u $(OMDEVMSYS)/tools/msys/mingw32/bin/libOpenThreads.dll $(OMBUILDDIR)/lib/omlibrary-modelica3d/osg-gtk/
	cp -p -u $(OMDEVMSYS)/tools/msys/mingw32/bin/libosg*.dll $(OMBUILDDIR)/lib/omlibrary-modelica3d/osg-gtk/
	cp -p -u $(OMDEVMSYS)/tools/msys/mingw32/bin/osgPlugins-3.5.1/*.dll $(OMBUILDDIR)/lib/omlibrary-modelica3d/osg-gtk/osgPlugins-3.5.1/
else # mingw64
	# copy the dbus static lib required during the simulation
	cp -rp $(OMDEVMSYS)/tools/msys/mingw64/lib/libdbus-1.a $(OMBUILDDIR)/lib/omc/
	cp -p -u $(OMDEVMSYS)/tools/msys/mingw64/bin/libOpenThreads.dll $(OMBUILDDIR)/lib/omlibrary-modelica3d/osg-gtk/
	cp -p -u $(OMDEVMSYS)/tools/msys/mingw64/bin/libosg*.dll $(OMBUILDDIR)/lib/omlibrary-modelica3d/osg-gtk/
	cp -p -u $(OMDEVMSYS)/tools/msys/mingw64/bin/osgPlugins-3.5.1/*.dll $(OMBUILDDIR)/lib/omlibrary-modelica3d/osg-gtk/osgPlugins-3.5.1/
endif

clean-python:
	rm -rf $(builddir_share)/omc/scripts/PythonInterface $(builddir_lib)/python

clean:
	$(MAKE) -f $(defaultMakefileTarget) -C OMCompiler clean OMBUILDDIR=$(OMBUILDDIR)
	test ! -d $(OMBUILDDIR) || rm -rf $(OMBUILDDIR)

LIBGITDIRS = `ls -f libraries/git`

gitclean:
	git submodule foreach --recursive 'git clean -fdx -e /git -e /svn'
	git clean -fdx -e OpenModelicaSetup -e .project -e .externalToolBuilders/OMDev-MINGW-OpenModelicaBuilder.launch
	for d in $(LIBGITDIRS); do git clean -fdx libraries/git/$$d; done
